[
  {
    "type": "bash",
    "disabled": false,
    "code": "../bin/pip install --pre torch torchvision torchaudio --extra-index-url https://download.pytorch.org/whl/nightly/cpu"
  },
  {
    "type": "bash",
    "disabled": false,
    "code": "case \"$(uname -s)\" in\n    Darwin*)\n        echo \"macOS detected\"\n        brew install cmake || (echo \"Homebrew not found. Install it first.\" && exit 1)\n        ;;\n    Linux*)\n        echo \"Linux detected\"\n        sudo apt-get update && sudo apt-get install -y cmake\n        ;;\n\nesac\n\ncmake --version || echo \"CMake installation failed\""
  },
  {
    "type": "bash",
    "disabled": false,
    "code": "rm -rf build\nmkdir -p build || { echo \"Failed to create build directory\"; exit 1; }\n\ncd build\n\ncmake ..\ncmake --build . --config Release\n\ncd .."
  },
  {
    "type": "bash",
    "disabled": false,
    "code": "mkdir -p models\n\nif [ ! -f models/flux1-schnell-q4_k.gguf ]; then\n    wget -nc -O models/flux1-schnell-q4_k.gguf \"https://huggingface.co/leejet/FLUX.1-schnell-gguf/resolve/main/flux1-schnell-q4_k.gguf\"\nelse\n    echo \"Model already exist.\"\nfi\n\nif [ ! -f models/clip_l.safetensors ]; then\n    wget -nc -O models/clip_l.safetensors \"https://huggingface.co/comfyanonymous/flux_text_encoders/resolve/main/clip_l.safetensors\"\nelse\n    echo \"clip_l.safetensors exist.\"\nfi\n\nif [ ! -f models/diffusion_pytorch_model.safetensors ]; then\n    wget -nc -O models/diffusion_pytorch_model.safetensors \"https://huggingface.co/black-forest-labs/FLUX.1-schnell/resolve/main/vae/diffusion_pytorch_model.safetensors\"\nelse\n    echo \"diffusion_pytorch_model.safetensors exist.\"\nfi\n\nif [ ! -f models/t5xxl_fp16.safetensors ]; then\n    wget -nc -O models/t5xxl_fp16.safetensors \"https://huggingface.co/comfyanonymous/flux_text_encoders/resolve/main/t5xxl_fp16.safetensors\"\nelse\n    echo \"t5xxl_fp16.safetensors exist.\"\nfi"
  },
  {
    "type": "bash",
    "disabled": false,
    "code": "echo \"$prompt\" > output.txt\n\nseed=$(od -An -N4 -i /dev/urandom | tr -d ' ')\ntimestamp=$(date +%Y%m%d_%H%M%S)\noutput_filename=\"output_${timestamp}_seed_${seed}.png\"\n\nif (( RANDOM % 2 )); then\n    width=768\n    height=1024\nelse\n    width=1024\n    height=768\nfi\n\necho \"Using seed: $seed\"\necho \"Output filename: $output_filename\"\necho \"Width: $width, Height: $height\"\n\n./build/bin/sd \\\n--cfg-scale 1.0 \\\n--clip_l ./models/clip_l.safetensors \\\n--diffusion-model ./models/flux1-schnell-q4_k.gguf \\\n--sampling-method euler \\\n--seed $seed \\\n--steps 4 \\\n--t5xxl ./models/t5xxl_fp16.safetensors \\\n--vae ./models/diffusion_pytorch_model.safetensors \\\n-p \"$prompt\" \\\n-H $height \\\n-W $width \\\n-o \"$output_filename\""
  }
]