[
  {
    "type": "bash",
    "disabled": false,
    "code": "# https://huggingface.co/microsoft/Phi-3-mini-4k-instruct-gguf (MIT)\nif [ ! -f models/Phi-3-mini-4k-instruct-q4.gguf ]; then\n    wget -nc -O models/Phi-3-mini-4k-instruct-q4.gguf \"https://huggingface.co/microsoft/Phi-3-mini-4k-instruct-gguf/resolve/main/Phi-3-mini-4k-instruct-q4.gguf\"\nelse\n    echo \"Model already exist.\"\nfi"
  },
  {
    "type": "bash",
    "disabled": false,
    "code": "JSON=$(flatpack vector search-text \"$QUESTION\" --data-dir \"vector\" --json)\nCONTEXT=$(echo \"$JSON\" | jq -r '.[].text' | awk 'NF{print $0 \"\\n\"}')"
  },
  {
    "type": "bash",
    "disabled": false,
    "code": "./build/bin/llama-cli \\\n    -m models/Phi-3-mini-4k-instruct-q4.gguf \\\n    -n $TOKENS \\\n    --no-display-prompt \\\n    -p \"<|user|>\\nYou are $CHARACTER. Always refer to yourself in the first person and respond using language and tone appropriate to the historical period. Use only the information provided in the context below to answer the question. Do not break character or invent facts beyond the given context.\\nCONTEXT: $CONTEXT\\nQUESTION: $QUESTION\\n<|end|>\\n<|assistant|>\" \\\n    > output.txt \\\n    2>log.txt"
  },
  {
    "type": "bash",
    "disabled": false,
    "code": "../bin/pip install \\\nonnxruntime==1.20.1 \\\nphonemizer==3.3.0 \\\npiper-phonemize-cross==1.2.1 \\\npiper-tts==1.2.0 --no-deps"
  },
  {
    "type": "bash",
    "disabled": false,
    "code": "if [ ! -f cori-high.onnx ]; then\n    wget -nc -O cori-high.onnx \"https://sfo3.digitaloceanspaces.com/bkmdls/cori-high.onnx\"\nelse\n    echo \"cori-high.onnx already exists.\"\nfi\n\nif [ ! -f cori-high.onnx.json ]; then\n    wget -nc -O cori-high.onnx.json \"https://sfo3.digitaloceanspaces.com/bkmdls/cori-high.onnx.json\"\nelse\n    echo \"cori-high.onnx.json already exists.\"\nfi"
  },
  {
    "type": "bash",
    "disabled": false,
    "code": "if [[ \"$OSTYPE\" == \"darwin\"* ]]; then\n    if [ -d \"/opt/homebrew/Cellar/espeak-ng/1.51/share/espeak-ng-data\" ]; then\n        cp -rp /opt/homebrew/Cellar/espeak-ng/1.51/share/espeak-ng-data ../lib/python3.12/site-packages/piper_phonemize/espeak-ng-data\n        echo \"Successfully copied espeak-ng-data directory\"\n    else\n        echo \"Error: Source espeak-ng-data directory not found\"\n        exit 1\n    fi\nelse\n    sudo apt-get update\n    sudo apt-get install -y espeak-ng\n    echo \"espeak-ng has been installed\"\nfi"
  },
  {
    "type": "bash",
    "disabled": false,
    "code": "echo \"$(cat output.txt)\" | \"../bin/piper\" \\\n--model \"cori-high.onnx\" \\\n--output-file output.wav > /dev/null 2>&1"
  }
]